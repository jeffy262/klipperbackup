# The MCU section only applies to the Eddy USB. For Eddy Coil you will use the MCU name of the toolboard that you connected the Eddy Coil to.
# Eddy USB MCU
[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_504450611083D51C-if00
restart_method: command

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 120

######################################################################
## Eddy Probe (BTT Eddy USB) — offsets & wiring
######################################################################
[probe_eddy_current btt_eddy]
sensor_type: ldc1612
#z_offset: 2.5              # Current calibrated Z offset (probe->nozzle). Keep >= 0.
                           # Remember: horizontal_move_z in [bed_mesh] must be >= this.
#i2c_address:
i2c_mcu: eddy              # Eddy USB MCU name (matches your [mcu eddy])
i2c_bus: i2c0f             # Eddy USB default I2C on the probe board
z_offset: 2.5
# XY offsets are probe location relative to the nozzle.
# +X = probe is to the RIGHT of the nozzle
# +Y = probe is BEHIND the nozzle (towards the back)
# With y_offset = +25, the probe rides 25mm behind the nozzle.
x_offset: 0
y_offset: 20




# Eddy USB temperature input
[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26


######################################################################
## Bed Mesh — nozzle reach X:5..425, Y:25..435; probe y_offset +20; 5 mm edge margin
######################################################################
[bed_mesh]
# Travel height during XY moves while probing (must be >= probe z_offset).
horizontal_move_z: 5

# Probe move speed (mm/s).
speed: 100

# Mesh limits in NOZZLE coordinates chosen so the PROBE CENTER stays ≥5 mm from bed edges:
#  - X: nozzle 10..420  (x_offset=0 -> probe center matches nozzle X)
#  - Y: nozzle 25..410  (probe Y = nozzle Y + 20 -> probe center 45..430)
# Your front bump-out is at Y=15, which is outside the nozzle's reachable Y (>=25), so it’s inherently excluded.
mesh_min: 15, 30
mesh_max: 405, 390

# Probe density (odd counts give a center point).
probe_count: 10, 10

# Interpolation method.
algorithm: bicubic

# Keep overshoot off so we don’t dip below nozzle Ymin=25 during row reversals.
#scan_overshoot: 1

######################################################################
## Safe Z Home — home Z at bed center using the probe
######################################################################
[safe_z_home]
# Center point in NOZZLE coordinates. With y_offset +20, the probe samples at Y = 230 + 20 = 250.
home_xy_position: 215, 230

# Lift before probing to clear clips/parts.
z_hop: 10
z_hop_speed: 25

# Travel speed while moving to the home point (mm/s).
speed: 200




###############################Macros and related################################
#This secton contains macros and related config sections. Some should be used, others are optional. Read the comment above each one to find out whether or not to uncomment it for your installation.


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[save_variables]
filename: ~/printer_data/config/variables.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[force_move]
enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate the Eddy.



# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[delayed_gcode RESTORE_PROBE_OFFSET]
initial_duration: 1.
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
  {% endif %}



# Uncomment this if you are using Eddy as the probe AND the homing endstop
# Take note of the lines that should only be used if you have a KNOMI installed.
#[gcode_macro G28]
#rename_existing: G28.1
#gcode:
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg
  #G28.1 {rawparams}
 # {% if not rawparams or (rawparams and 'Z' in rawparams) %}
 #   PROBE
 #   SET_Z_FROM_PROBE
 # {% endif %}
  #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False # Uncomment this if using a KNOMI and then remove the G28 macro from the KNOMI.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro SET_Z_FROM_PROBE]
gcode:
    {% set cf = printer.configfile.settings %}
    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}
    G90
    G1 Z{cf.safe_z_home.z_hop}


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro Z_OFFSET_APPLY_PROBE]
rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
gcode:
  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
  {% if params.Z_ADJUST %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
  {% endif %}
  {% if params.Z %} 
    {% set paramList = rawparams.split() %}
    {% for i in range(paramList|length) %}
      {% if paramList[i]=="Z=0" %}
        {% set temp=paramList.pop(i) %}
        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
        {% if paramList.append(temp) %}{% endif %}
      {% endif %}
    {% endfor %}
    {% set rawparams=paramList|join(' ') %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }



[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28
  G90
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  PROBE
  SET_Z_FROM_PROBE
  PROBE_EDDY_CURRENT_CALIBRATE CHIP=btt_eddy







#This macro is optional but useful if you want to run a rapid scan before each print. Simply uncomment it and add BED_MESH_SCAN to your print start code.
#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: BTT_BED_MESH_CALIBRATE
#gcode:
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
#  BTT_BED_MESH_CALIBRATE METHOD=rapid_scan
#  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False #Only uncomment this line if using a KNOMI and then remove the BED_MESH_CALIBRATE macro from KNOMI.cfg
