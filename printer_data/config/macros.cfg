######################################################################
## PRIME / PURGE
######################################################################

[gcode_macro PURGE_LINE_SIMPLE]
description: Simple two-line prime, fixed extrusion, with self-contained heating

variable_length: 120                      # length of each purge line (mm)
variable_speed: 900                       # move speed while drawing the lines (mm/min)
variable_start_x: 150                     # X start (mm)
variable_start_y: 15                      # Y start (mm)
variable_z: 0.28                          # Z height for the purge (first-layer height)
variable_gap: 0.6                         # gap between the two lines (mm)
variable_e_per_line: 35.0                 # total extrusion per line (mm of filament)
variable_cleanup_retract: 1.0             # retract at the end to reduce stringing (mm)

gcode:
  # Guard rails: require homed axes and a safe hotend temperature.
  {% if printer.toolhead.homed_axes != "xyz" %}
    RESPOND TYPE=info MSG="PURGE_LINE_SIMPLE skipped: axes not homed."
  {% else %}
    ; ---------- Parameter collection (with defaults) ----------
    {% set x0 = params.X|default(start_x)|float %}
    {% set y0 = params.Y|default(start_y)|float %}
    {% set z0 = params.Z|default(z)|float %}
    {% set len = params.LENGTH|default(length)|float %}
    {% set spd = params.SPEED|default(speed)|float %}
    {% set gapv = params.GAP|default(gap)|float %}
    {% set eline = params.E_PER_LINE|default(e_per_line)|float %}
    {% set zsafe = z0 if z0 > 0.05 else 0.05 %}
    {% set target_extruder_temp = params.TEMP|default(printer.extruder.target)|float %}

    ; ---------- Wait for hotend to reach target temp ----------
    M109 S{target_extruder_temp}

    ; ---------- Setup ----------
    SAVE_GCODE_STATE NAME=PLS
    G90                        ; absolute XYZ moves
    M83                        ; relative extrusion mode
    G92 E0                     ; zero out the extruder coordinate

    ; ---------- First line: draw to X+len ----------
    G1 X{x0} Y{y0} Z{zsafe} F6000
    G1 X{x0 + len} E{eline} F{spd}

    ; ---------- Hop, shift by gap, then second line back to start ----------
    G1 Z{zsafe + 0.05} F3000
    G1 X{x0 + len} Y{y0 + gapv} F6000
    G1 Z{zsafe} F3000
    G1 X{x0} E{eline} F{spd}

    ; ---------- Clean up: small retract, restore modes/state ----------
    G1 E-{params.CLEANUP_RETRACT|default(cleanup_retract)|float} F1800
    M82                        ; back to absolute extrusion mode
    RESTORE_GCODE_STATE NAME=PLS
  {% endif %}

######################################################################
## START / END / CANCEL
######################################################################

[gcode_macro START_PRINT]
description: Preheat, home, mesh, purge in front pocket, then wipe

# Usage:
# START_PRINT BED=60 EXTRUDER=200
gcode:
  {% set target_bed = params.BED|default(60)|int %}
  {% set target_extruder = params.EXTRUDER|default(200)|int %}

  # Start heating bed
  M140 S{target_bed}
  
  # Home the printer
  G28

  # Wait for bed to reach temperature
  M190 S{target_bed}
  
  # Wait for extruder to reach temperature
  M109 S{target_extruder}

  # Mesh the bed
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=current

  # Purge the nozzle
  G92 E0
  G1 Z0.28 F300
  PURGE_LINE_SIMPLE Z=0.28
  
  # Hand back control to slicer
  G92 E0
  G1 Z10 F3000


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
description: Safe cancel sequence (power down, park, then call base)
gcode:
    CLEAR_PAUSE
    TURN_OFF_HEATERS
    M107
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
    PRINT_END
    BASE_CANCEL_PRINT


######################################################################
## PAUSE / RESUME
######################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
variable_zhop: 0
variable_etemp: 0
variable_keep_heat: False
gcode:
    {% set z_hop = params.Z|default(30)|float %}
    {% set keep_heat = params.KEEP_HEAT|default(keep_heat)|lower in ['1','true','on','yes'] %}

    {% if printer.pause_resume.is_paused|int == 0 %}
        SAVE_GCODE_STATE NAME=PAUSE_STATE
        BASE_PAUSE

        SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=zhop VALUE={z_hop}
        SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=etemp VALUE={printer.extruder.target}
        SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=keep_heat VALUE={keep_heat}

        {% if printer.configfile.config.get('filament_switch_sensor filament_sensor') is not none %}
          SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
        {% endif %}

        {% if (printer.gcode_move.position.z + z_hop) <= printer.toolhead.axis_maximum.z %}
            G91
            G1 Z{z_hop} F1200
            G90
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height. Skipping z-hop.") }
            SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=zhop VALUE=0
        {% endif %}

        G91
        G1 E-20 F1800
        G90
        G1 X25 Y10 F6000    ; Safe park position
        
        {% if not keep_heat %}
          M104 S0
        {% endif %}
        SET_IDLE_TIMEOUT TIMEOUT=43200
    {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% if printer.pause_resume.is_paused|int == 1 %}
        {% set zhop = printer.gcode_macro.pause.zhop|float %}
        {% set etemp = printer.gcode_macro.pause.etemp|float %}
        
        {% if printer.configfile.config.get('filament_switch_sensor filament_sensor') is not none %}
          SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
        {% endif %}

        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

        {% if etemp > 0 and printer.extruder.temperature < etemp %}
          M109 S{etemp}
        {% endif %}

        RESTORE_GCODE_STATE NAME=PAUSE_STATE MOVE=1 MOVE_SPEED=3000

        G91
        M83
        G1 Z{zhop * -1} F900
        G1 E20 F900      ; Small re-prime to clear nozzle
        M82
        G90

        BASE_RESUME
  {% endif %}

######################################################################
## Filament Change / Purge / Load / Unload
######################################################################

[gcode_macro M600]
description: Filament change using PAUSE (keeps hotend hot)
gcode:
  {% set x = params.X|default(245)|float %}
  {% set y = params.Y|default(25)|float %}
  {% set z = params.Z|default(30)|float %}
  {% set retract_dist = params.E|default(100)|float %}

  PAUSE KEEP_HEAT=1
  
  G90
  G1 X{x} Y{y} F6000

  {% if printer.extruder.temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
    M83
    G1 E10 F500
    G1 E-{retract_dist} F1000
    M82
  {% else %}
    { action_respond_info("Hotend too cold for M600 extrusion; heat before changing.") }
  {% endif %}

[gcode_macro PURGE]
description: Purge straight length at current temp
gcode:
  {% set length = params.LENGTH|default(50)|float %}
  {% set speed = params.SPEED|default(600)|float %}
  
  M117 PURGING {length}mm...
  {% if printer.extruder.temperature < printer.configfile.settings.extruder.min_extrude_temp %}
    { action_respond_info("Hotend too cold to purge!") }
  {% else %}
    M83
    G1 E{length} F{speed}
    M82
  {% endif %}

[gcode_macro LOAD_FILAMENT]
variable_load_distance: 80
variable_purge_distance: 30
variable_nozzle_preheat_temp: 235
variable_turn_off_extruder: False
gcode:
    {% set load_speed  = params.LOAD_SPEED|default(600)|float %}
    {% set purge_speed = params.PURGE_SPEED|default(100)|float %}
    {% set target_temp = params.TARGET_TEMP|default(nozzle_preheat_temp)|float %}
    {% set min_temp    = params.MIN_TEMP|default(180)|float %}
    {% set turnoff     = params.TURN_OFF|default(turn_off_extruder)|string|lower in ['1','true','on','yes'] %}

    M117 Loading filament...
    G91
    G92 E0
    M83

    {% if printer.extruder.temperature < target_temp %}
      M109 S{target_temp}
    {% endif %}

    {% if printer.extruder.temperature < min_temp %}
      { action_respond_info("Hotend is below min_temp for extrusion! Aborting load.") }
    {% else %}
      G1 E{load_distance} F{load_speed}
      G1 E{purge_distance} F{purge_speed}
    {% endif %}

    G92 E0
    M82
    G90

    {% if turnoff %}
      M104 S0
    {% endif %}
    M117 Filament loaded.

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance: 100
variable_nozzle_preheat_temp: 235
variable_turn_off_extruder: False
variable_min_temp: 180
variable_retract_speed: 600
variable_tip_retract_1: 5.0
variable_tip_pushback: 1.0
variable_tip_retract_2: 8.0
variable_tip_speed_fast: 1200
variable_z_hop: 2.0
gcode:
    {% set target_temp = params.TARGET_TEMP|default(nozzle_preheat_temp)|float %}
    {% set min_temp    = params.MIN_TEMP|default(min_temp)|float %}
    {% set r_speed     = params.RETRACT_SPEED|default(retract_speed)|float %}
    {% set turn_off    = params.TURN_OFF|default(turn_off_extruder)|lower in ['1','true','on','yes'] %}

    M117 Unloading filament...
    G91
    {% if z_hop|float > 0 and printer.toolhead.homed_axes == "xyz" %}
      G1 Z{z_hop} F600
      G90
    {% endif %}
    G92 E0
    M83

    {% if printer.extruder.temperature < target_temp %}
      M109 S{target_temp}
    {% endif %}

    {% if printer.extruder.temperature < min_temp %}
      { action_respond_info("Hotend is below min_temp for extrusion! Aborting unload.") }
    {% else %}
      G1 E-{tip_retract_1} F{tip_speed_fast}
      G1 E{tip_pushback}  F{tip_speed_fast}
      G1 E-{tip_retract_2} F{tip_speed_fast}
      G1 E-{unload_distance} F{r_speed}
    {% endif %}

    G92 E0
    M82
    G90

    {% if turn_off %}
      M104 S0
    {% endif %}
    M117 Filament unloaded.


######################################################################
## Gantry, PID, Utilities
######################################################################

[gcode_macro G32]
description: Re-home, (optional) QGL, park center
gcode:
    BED_MESH_CLEAR
    G28
    {% if printer.quad_gantry_level is defined %}
      QUAD_GANTRY_LEVEL
    {% endif %}
    G28 Z
    G0 X{(printer.toolhead.axis_maximum.x/2)|int} Y{(printer.toolhead.axis_maximum.y/2)|int} Z30 F3600

[gcode_macro PIDtuneHOTEND]
gcode:
    {% set temp = params.TEMP|default(200)|float %}
    PID_CALIBRATE HEATER=extruder TARGET={temp}

[gcode_macro PIDtuneBED]
gcode:
    {% set temp = params.TEMP|default(60)|float %}
    PID_CALIBRATE HEATER=heater_bed TARGET={temp}


######################################################################
## Power & Idle
######################################################################

[gcode_macro POWER_OFF_PRINTER]
description: Toggle smart plug off via Moonraker (adjust device name to yours)
gcode:
    {action_call_remote_method("set_device_power", device="printer_plug", state="off")}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[idle_timeout]
gcode:
  M118 "Printer has been idle for 15 minutes. Steppers and heaters turned off."
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=300
timeout: 900


######################################################################
## Git Backup
######################################################################

[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default("Klipper configuration update") %}
    RUN_SHELL_COMMAND CMD=update_git_script PARAMS="{message}"

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh -c \"$1\""
timeout: 90.0
verbose: True