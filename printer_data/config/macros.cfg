######################################################################
## PRIME / PURGE
######################################################################

[gcode_macro PURGE_LINE_SIMPLE]
description: Simple two-line prime with safety checks (heats if needed)
variable_length: 120
variable_speed: 900
variable_start_x: 150
variable_start_y: 15
variable_z: 0.28
variable_gap: 0.6
variable_e_per_line: 35.0
variable_cleanup_retract: 1.0
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    RESPOND TYPE=info MSG="PURGE_LINE_SIMPLE skipped: axes not homed."
    RETURN
  {% endif %}

  {% set x0    = params.X|default(start_x)|float %}
  {% set y0    = params.Y|default(start_y)|float %}
  {% set z0    = params.Z|default(z)|float %}
  {% set len   = params.LENGTH|default(length)|float %}
  {% set spd   = params.SPEED|default(speed)|float %}
  {% set gapv  = params.GAP|default(gap)|float %}
  {% set eline = params.E_PER_LINE|default(e_per_line)|float %}
  {% set zsafe = z0 if z0 > 0.05 else 0.05 %}
  {% set minextrude = printer.configfile.settings.extruder.min_extrude_temp|int %}
  {% set target_req = params.TEMP|default(printer.extruder.target)|int %}
  {% set heat_to = [target_req, minextrude]|max %}

  {% if printer.extruder.temperature < heat_to %}
    M109 S{heat_to}
  {% endif %}

  SAVE_GCODE_STATE NAME=PLS
  G90
  M83
  G92 E0

  G1 X{x0} Y{y0} Z{zsafe} F6000
  G1 X{x0 + len} E{eline} F{spd}

  G1 Z{zsafe + 0.05} F3000
  G1 X{x0 + len} Y{y0 + gapv} F6000
  G1 Z{zsafe} F3000
  G1 X{x0} E{eline} F{spd}

  G1 E-{params.CLEANUP_RETRACT|default(cleanup_retract)|float} F1800
  M82
  RESTORE_GCODE_STATE NAME=PLS


[gcode_macro PURGE]
description: Purge straight length; optionally heat with TEMP=...
gcode:
  {% set length = params.LENGTH|default(50)|int %}
  {% set speed  = params.SPEED|default(600)|int %}
  {% set minT   = printer.configfile.settings.extruder.min_extrude_temp|int %}
  {% set wantT  = params.TEMP|default(0)|int %}

  {% if wantT > 0 and wantT < minT %}
    {% set wantT = minT %}
  {% endif %}

  {% if wantT > 0 and printer.extruder.temperature < wantT %}
    M109 S{wantT}
  {% elif wantT == 0 and printer.extruder.temperature < minT %}
    RESPOND TYPE=info MSG="PURGE skipped: nozzle below {minT}C. Pass TEMP=... or heat first."
    RETURN
  {% endif %}

  M117 Purging {length}mm
  M83
  G1 E{length} F{speed}
  M82


######################################################################
## START / END / CANCEL
######################################################################

[gcode_macro START_PRINT]
description: Preheat, home, mesh, purge in front pocket, optional wipe
gcode:
  {% set target_bed      = params.BED|default(60)|int %}
  {% set target_extruder = params.EXTRUDER|default(200)|int %}
  {% set use_rapid       = params.RAPID|default(1)|int %}
  {% set purge_x_start   = params.PURGE_X|default(145)|float %}
  {% set purge_y         = params.PURGE_Y|default(15)|float %}
  {% set purge_len       = params.PURGE_LEN|default(140)|float %}
  {% set purge_z         = params.PURGE_Z|default(2.0)|float %}
  {% set approach_y_safe = 30.0 %}
  {% set travel_f        = 6000 %}
  {% set z_f             = 3000 %}

  {% if printer.configfile.config.get('gcode_macro RAINBOW_LEDS') is not none %}
    RAINBOW_LEDS
  {% endif %}

  M104 S120
  M140 S{target_bed}

  G90
  G28

  M190 S{target_bed}

  BED_MESH_CLEAR
  {% if use_rapid == 1 %}
    BED_MESH_CALIBRATE ADAPTIVE=1 METHOD=rapid_scan
  {% else %}
    BED_MESH_CALIBRATE ADAPTIVE=1
  {% endif %}
  BED_MESH_PROFILE SAVE=current

  G1 Z{ purge_z if purge_z > 0.6 else 0.6 } F{z_f}
  G1 X{purge_x_start} Y{approach_y_safe} F{travel_f}
  G1 Y{purge_y} F3000

  G92 E0
  M109 S{target_extruder}

  {% if printer.configfile.config.get('gcode_macro PURGE_LINE_SIMPLE') is not none %}
    PURGE_LINE_SIMPLE X={purge_x_start} Y={purge_y} LENGTH={purge_len} TEMP={target_extruder}
  {% else %}
    M83
    G1 X{purge_x_start + purge_len} E15 F1200
    G1 E-1.0 F1800
    M82
  {% endif %}

  {% if printer.configfile.config.get('gcode_macro WIPE_NOZZLE') is not none %}
    WIPE_NOZZLE
  {% endif %}

  G92 E0
  G1 Z4.0 F{z_f}
  SET_IDLE_TIMEOUT TIMEOUT=900
  G1 Z10.0 F{z_f}


[gcode_macro PRINT_END]
description: Park, cool, clean up after print
gcode:
  SAVE_GCODE_STATE NAME=STATE_PRINT_END
  M400
  G92 E0
  G1 E-10 F1800
  G91
  G0 Z10 F3000
  G90
  G0 X20 Y{printer.toolhead.axis_maximum.y - 5} F6000
  TURN_OFF_HEATERS
  M107
  BED_MESH_CLEAR


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
description: Safe cancel sequence
gcode:
  CLEAR_PAUSE
  TURN_OFF_HEATERS
  M107
  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}
  PRINT_END
  BASE_CANCEL_PRINT


######################################################################
## PAUSE / RESUME
######################################################################

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
variable_zhop: 0
variable_etemp: 0
variable_keep_heat: False
gcode:
  {% set z = params.Z|default(30)|int %}
  {% set keep = params.KEEP_HEAT|default(keep_heat)|lower in ['1','true','on','yes'] %}

  {% if printer['pause_resume'].is_paused|int == 0 %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}

    {% if printer.configfile.config.get('filament_switch_sensor filament_sensor') is not none %}
      SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    {% endif %}

    SAVE_GCODE_STATE NAME=PAUSE
    BASE_PAUSE

    {% if (printer.gcode_move.position.z + z) <= printer.toolhead.axis_maximum.z %}
      G91
      G1 Z{z} F1200
      G90
    {% else %}
      RESPOND TYPE=info MSG="Pause zhop exceeds maximum Z height."
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
    {% endif %}

    G90
    G1 X0 Y0 F6000
    SAVE_GCODE_STATE NAME=PAUSEPARK

    G91
    G1 E-20 F1800
    G90

    {% if not keep %}
      M104 S0
    {% endif %}

    SET_IDLE_TIMEOUT TIMEOUT=43200
  {% endif %}


[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
  {% set e = params.E|default(20)|int %}

  {% if printer['pause_resume'].is_paused|int == 1 %}
    {% if printer.configfile.config.get('filament_switch_sensor filament_sensor') is not none %}
      SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    {% endif %}

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

    {% if etemp|int > 0 %}
      M109 S{etemp|int}
    {% endif %}

    {% if printer.configfile.config.get('gcode_macro PURGE_LINE_SIMPLE') is not none %}
      PURGE_LINE_SIMPLE X=150 Y=17 LENGTH=120
    {% endif %}

    {% if printer.configfile.config.get('gcode_macro WIPE_NOZZLE_PAUSE') is not none %}
      WIPE_NOZZLE_PAUSE
    {% endif %}

    RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=3000

    G91
    M83
    {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
      G1 Z{zhop * -1} E{e} F900
    {% else %}
      G1 Z{zhop * -1} F900
    {% endif %}
    M82

    RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=3000
    BASE_RESUME
  {% endif %}


######################################################################
## Filament Change / Load / Unload
######################################################################

[gcode_macro M600]
description: Filament change using PAUSE (keeps hotend hot)
gcode:
  {% set X = params.X|default(245)|int %}
  {% set Y = params.Y|default(25)|int %}
  {% set Z = params.Z|default(30)|int %}
  {% set E = params.E|default(100)|int %}

  SAVE_GCODE_STATE NAME=M600_state
  PAUSE KEEP_HEAT=1
  G90
  G1 X{X} Y{Y} F6000

  {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
    M83
    G1 E10 F500
    G1 E-{E} F1000
    M82
  {% else %}
    RESPOND TYPE=info MSG="Hotend too cold for M600 extrusion; heat before changing."
  {% endif %}


[gcode_macro LOAD_FILAMENT]
description: Heat, move to front-center @Z=30, load & purge (relative E)
variable_load_distance: 80
variable_purge_distance: 30
variable_nozzle_preheat_temp: 235
variable_min_temp: 180
variable_turn_off_extruder: False
variable_anti_ooze: 2.0
variable_front_y: 15
gcode:
  {% set load_speed  = params.LOAD_SPEED|default(600)|int %}
  {% set purge_speed = params.PURGE_SPEED|default(100)|int %}
  {% set target_temp = params.TARGET_TEMP|default(nozzle_preheat_temp)|int %}
  {% set min_t       = params.MIN_TEMP|default(min_temp)|int %}
  {% set anti_ooze   = params.ANTI_OOZE|default(anti_ooze)|float %}
  {% set turnoff     = params.TURN_OFF|default(turn_off_extruder)|string|lower in ['1','true','on','yes'] %}
  {% set front_y     = params.FRONT_Y|default(front_y)|float %}
  {% set x_center    = (printer.toolhead.axis_maximum.x/2.0)|float %}
  {% set z_target    = 30.0 if 30.0 <= printer.toolhead.axis_maximum.z else (printer.toolhead.axis_maximum.z - 5.0) %}

  SAVE_GCODE_STATE NAME=LOAD_STATE
  M107

  ; heat (respect a floor so we never extrude cold)
  {% if target_temp < min_t %}
    {% set target_temp = min_t %}
  {% endif %}
  M104 S{target_temp}
  M109 S{target_temp}

  ; go to front-center at Z=30 if homed, else extrude in place
  {% if printer.toolhead.homed_axes == "xyz" %}
    G90
    G1 Z{z_target} F3000
    G1 X{x_center} Y{front_y} F6000
  {% else %}
    RESPOND TYPE=info MSG="LOAD_FILAMENT: axes not homed; extruding in place."
  {% endif %}

  ; load & purge using relative extrusion
  M83
  G92 E0
  G1 E{load_distance}  F{load_speed}
  G1 E{purge_distance} F{purge_speed}
  G1 E-{anti_ooze} F1800
  M82

  {% if turnoff %}
    M104 S0
  {% endif %}

  RESTORE_GCODE_STATE NAME=LOAD_STATE
  M117 Filament load complete




[gcode_macro UNLOAD_FILAMENT]
description: Safely heat and fully retract filament
variable_unload_distance: 100
variable_nozzle_preheat_temp: 235
variable_turn_off_extruder: False
variable_min_temp: 180
variable_retract_speed: 600
variable_tip_retract_1: 5.0
variable_tip_pushback: 1.0
variable_tip_retract_2: 8.0
variable_tip_speed_fast: 1200
variable_z_hop: 2.0
gcode:
  {% set target_temp = params.TARGET_TEMP|default(nozzle_preheat_temp)|float %}
  {% set min_temp    = params.MIN_TEMP|default(min_temp)|float %}
  {% set r_speed     = params.RETRACT_SPEED|default(retract_speed)|float %}
  {% set turn_off    = params.TURN_OFF|default(turn_off_extruder)|lower in ['1','true','on','yes'] %}

  SAVE_GCODE_STATE NAME=UNLOAD_STATE

  {% if target_temp < min_temp %}
    {% set target_temp = min_temp %}
  {% endif %}

  M104 S{target_temp}
  M109 S{target_temp}

  {% if z_hop|float > 0 and printer.toolhead.homed_axes == "xyz" %}
    G91
    G1 Z{z_hop} F600
    G90
  {% endif %}

  G91
  G92 E0
  G1 E-{tip_retract_1} F{tip_speed_fast}
  G1 E{tip_pushback}  F{tip_speed_fast}
  G1 E-{tip_retract_2} F{tip_speed_fast}
  G1 E-{unload_distance} F{r_speed}
  G90

  RESTORE_GCODE_STATE NAME=UNLOAD_STATE

  {% if turn_off %}
    M104 S0
  {% endif %}

  M117 Filament unload complete


######################################################################
## Gantry, PID, Utilities
######################################################################

[gcode_macro G32]
description: Re-home, (optional) QGL, park center
gcode:
  BED_MESH_CLEAR
  G28
  {% if printer.quad_gantry_level is defined %}
    QUAD_GANTRY_LEVEL
    G28 Z
  {% else %}
    G28 Z
  {% endif %}
  G0 X{(printer.toolhead.axis_maximum.x/2)|int} Y{(printer.toolhead.axis_maximum.y/2)|int} Z30 F3600


[gcode_macro PIDtuneHOTEND]
gcode:
  {% set TEMP = params.TEMP|default(200)|float %}
  PID_CALIBRATE HEATER=extruder TARGET={TEMP}


[gcode_macro PIDtuneBED]
gcode:
  {% set TEMP = params.TEMP|default(60)|float %}
  PID_CALIBRATE HEATER=heater_bed TARGET={TEMP}


######################################################################
## Power & Idle
######################################################################

[gcode_macro POWER_OFF_PRINTER]
description: Toggle smart plug via Moonraker (adjust device name)
gcode:
  {action_call_remote_method("set_device_power", device="printer_plug", state="off")}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[idle_timeout]
gcode:
  M118 Printer idle for 5 minutes. Shutting down in 10 minutes!
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=300
timeout: 900
