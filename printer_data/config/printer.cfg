[include mainsail.cfg]
[include led_effects.cfg]

[include screws_tilt_adjust.cfg]
#[include nebula.cfg]

[include moonraker_obico_macros.cfg]
#[virtual_sdcard]
##[display_status]
#[pause_resume]

[include wipe_nozzle_pause.cfg]

[include macros.cfg]

[include sample-bigtreetech-adxl345-v2.0.cfg]

[include knomi.cfg]

[include bigtreetech-eddy-zoffbeta.cfg]

[include sample-bigtreetech-ebb-sb-usb-v1.0.cfg]

[include ebbfan.cfg]

[include skr3fan.cfg]

[exclude_object]

[include WIPE_NOZZLE.cfg]









[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_070026001351333031373138-if00
# host MCU service is preinstalled and ready to use with:
#[mcu CB2]
#serial: /tmp/klipper_host_mcu

#[include generic-bigtreetech-xxx.cfg]

# This file contains common pin mappings for the BigTreeTech SKR 3.
# To use this config, the firmware should be compiled for the
# STM32H743 with a "128KiB bootloader".

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: -2
#endstop_pin: ^PC1
position_endstop: 0
position_max: 430
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: false

[tmc2209 stepper_x]
uart_pin: PD5
diag_pin: ^PC1
driver_SGTHRS: 90
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.220
interpolate: True
stealthchop_threshold: 0

[stepper_y]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 40
#endstop_pin: ^PC3
full_steps_per_rotation: 200
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: -2
position_endstop: 0
position_max: 435
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: false

[tmc2209 stepper_y]
uart_pin: PD0
diag_pin: ^PC3
driver_SGTHRS: 80
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.220
interpolate: True
stealthchop_threshold: 0

[stepper_z]
step_pin: PE2
dir_pin: PE3
enable_pin: !PE0
microsteps: 16
rotation_distance: 8
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 395
homing_speed: 5            # was 8; 12–15 is fine
second_homing_speed: 3
homing_retract_dist: 7      # add this (5–10 typical)

[tmc2209 stepper_z]
uart_pin: PE1
# If you are NOT doing sensorless on Z, it's safer to REMOVE diag_pin entirely:
# diag_pin: PC0
run_current: 0.53
hold_current: 0.35
sense_resistor: 0.220
interpolate: True
stealthchop_threshold: 0



[filament_switch_sensor filament_sensor]
switch_pin:  ^PC15
pause_on_runout: True
insert_gcode:
    M117 Insert Detected


#[filament_motion_sensor filament_sensor]
#detection_length: 10
#extruder: extruder
#switch_pin: ^PC2
#pause_on_runout: True
#insert_gcode:
#    M117 Insert Detected
#runout_gcode:
#    M117 Runout Detected
    

[heater_bed]
heater_pin: PD7
sensor_type: Generic 3950
sensor_pin: PA1
control: pid
pid_kp: 75.801
pid_ki: 0.584
pid_kd: 2461.642
min_temp: 10
max_temp: 115





#[fan]
#Motherboard controler fan


[controller_fan motherboard_fan]
pin: PB7
stepper: stepper_x, stepper_y, stepper_z, extruder
heater: heater_bed
idle_timeout: 60


[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_070026001351333031373138-if00

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2200
max_z_velocity: 40
max_z_accel: 160
square_corner_velocity: 8
# (no max_accel_to_decel set → defaults to max_accel/2 = 1100)



[input_shaper]
shaper_type_x: mzv
shaper_freq_x: 38.4    # from X plot
shaper_type_y: ei
shaper_freq_y: 33.0    # from Y plot

[gcode_macro RAMP_BED_SMOOTH]
description: Smoothly ramp the bed to TARGET (110C ~10min baseline), with C/min cap. Preheat optional and non-fatal.
# Tunables (override at call-time, e.g. RAMP_BED_SMOOTH TARGET=70 MAX_RATE=8)
variable_steps: 30                  # number of setpoint steps
variable_base_110s: 600             # 110C in 600s (10 min) baseline
variable_max_rate_cpm: 12           # max heating rate (C per minute)
# Optional preheat (disabled by default, and never errors out)
variable_preheat_enable: 0          # 1 to enable preheat, 0 to skip
variable_preheat_temp: 35           # preheat setpoint (C)
variable_preheat_timeout_s: 600     # soft timeout; continues even if not reached
# Optional rise monitoring (off by default for simplicity)
variable_rise_check: 0              # 1 to enable simple rise checks
variable_rise_window_s: 20
variable_min_rise_c: 1.5
variable_stall_windows_max: 3
gcode:
  {% set target        = params.TARGET|default(110)|float %}
  {% set steps         = params.STEPS|default(steps)|int %}
  {% set base_110s     = params.BASE_110S|default(base_110s)|float %}
  {% set max_rate      = params.MAX_RATE|default(max_rate_cpm)|float %}
  {% set do_preheat    = params.PREHEAT|default(preheat_enable)|int %}
  {% set pre_t         = params.PREHEAT_TEMP|default(preheat_temp)|float %}
  {% set pre_timeout   = params.PREHEAT_TIMEOUT|default(preheat_timeout_s)|int %}
  {% set do_rise_check = params.RISE_CHECK|default(rise_check)|int %}
  {% set win_s         = params.RISE_WINDOW_S|default(rise_window_s)|float %}
  {% set min_rise      = params.MIN_RISE_C|default(min_rise_c)|float %}
  {% set stall_max     = params.STALL_WINDOWS_MAX|default(stall_windows_max)|int %}

  {% if steps < 1 %}{% set steps = 1 %}{% endif %}
  {% if target <= 0 %}{% set target = 1.0 %}{% endif %}
  {% if max_rate < 0.1 %}{% set max_rate = 0.1 %}{% endif %}

  # ----- Optional SOFT PREHEAT (never aborts) -----
  {% set start = printer.heater_bed.temperature|float %}
  {% if do_preheat and target > pre_t and start < pre_t - 0.5 %}
    {% set msg_pre = "RAMP_BED_SMOOTH: Soft-preheat to %.0fC (timeout %ds)..." % (pre_t, pre_timeout) %}
    RESPOND TYPE=echo MSG="{msg_pre}"
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={pre_t}
    {% set reached = 0 %}
    {% set loops = (pre_timeout / 2)|int %}
    {% for i in range(loops) %}
      G4 P2000
      {% if printer.heater_bed.temperature|float >= pre_t - 0.5 %}
        {% set reached = 1 %}
      {% endif %}
    {% endfor %}
    {% if reached == 0 %}
      RESPOND TYPE=echo MSG="RAMP_BED_SMOOTH: Preheat not reached in time; continuing with ramp."
    {% endif %}
  {% endif %}

  {% set current = printer.heater_bed.temperature|float %}

  # If already near target, just hold/cool to target
  {% if current >= target - 0.5 %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target-1} MAXIMUM={target+1}
    {% set msg_hold = "RAMP_BED_SMOOTH: Already near target; holding at %.0fC." % (target,) %}
    RESPOND TYPE=echo MSG="{msg_hold}"
  {% else %}
    # ----- Duration & rate cap -----
    {% set prop_total = base_110s * (target / 110.0) %}
    {% set delta = target - current %}
    {% if delta < 0.1 %}{% set delta = 0.1 %}{% endif %}
    {% set rate_min_total = (delta / max_rate) * 60.0 %}
    {% if params.DURATION is defined %}
      {% set total = params.DURATION|float %}
    {% else %}
      {% if prop_total > rate_min_total %}
        {% set total = prop_total %}
      {% else %}
        {% set total = rate_min_total %}
      {% endif %}
    {% endif %}
    {% set dt = total / steps %}
    {% set max_inc = (max_rate * dt / 60.0) %}
    {% if max_inc < 0.2 %}{% set max_inc = 0.2 %}{% endif %}

    {% set msg_start = "RAMP_BED_SMOOTH: %.1f->%.0fC over ~%.1fmin, steps=%d, cap=%.1fC/min" % (current, target, (total/60.0), steps, max_rate) %}
    RESPOND TYPE=echo MSG="{msg_start}"

    # Optional simple rise monitor
    {% set window_elapsed = 0.0 %}
    {% set last_check_temp = current %}
    {% set stalled = 0 %}

    # ----- Ramp loop -----
    {% for i in range(steps) %}
      {% set tnow = printer.heater_bed.temperature|float %}
      {% set planned = current + (target - current) * ((i + 1) / steps) %}
      {% set allowed = tnow + max_inc %}
      {% if planned < allowed %}
        {% set next_sp = planned %}
      {% else %}
        {% set next_sp = allowed %}
      {% endif %}
      {% if next_sp > target %}{% set next_sp = target %}{% endif %}
      {% if next_sp < tnow + 0.1 %}{% set next_sp = tnow + 0.1 %}{% endif %}

      SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={next_sp}
      G4 P{(dt * 1000)|int}

      {% if do_rise_check %}
        {% set window_elapsed = window_elapsed + dt %}
        {% if window_elapsed >= win_s %}
          {% set cur2 = printer.heater_bed.temperature|float %}
          {% set rise = cur2 - last_check_temp %}
          {% if rise < min_rise %}
            {% set stalled = stalled + 1 %}
          {% else %}
            {% set stalled = 0 %}
          {% endif %}
          {% set last_check_temp = cur2 %}
          {% set window_elapsed = 0.0 %}
          {% if stalled >= stall_max %}
            RESPOND TYPE=echo MSG="RAMP_BED_SMOOTH: Warning: temperature rise is slow; check SSR/PSU/wiring."
          {% endif %}
        {% endif %}
      {% endif %}
    {% endfor %}

    # Final set and wait
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target-1} MAXIMUM={target+1}
    RESPOND TYPE=echo MSG="RAMP_BED_SMOOTH: Reached target."
  {% endif %}







########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE9,  EXP1_7=PE11, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=PE8, EXP1_6=PE10, EXP1_8=PE12, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4,   EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

########################################
# TMC2209 configuration
########################################







#[tmc2209 extruder]
#uart_pin: PC6
#run_current: 0.600
#diag_pin:

#[tmc2209 extruder1]
#uart_pin: PD12
#run_current: 0.600
#diag_pin:

########################################
# TMC2130 configuration
########################################

#[tmc2130 stepper_x]
#cs_pin: PD5
#spi_software_miso_pin: PE15
#spi_software_mosi_pin: PE13
#spi_software_sclk_pin: PE14
#run_current: 0.800
#stealthchop_threshold: 999999
#diag1_pin: PC1

#[tmc2130 stepper_y]
#cs_pin: PD0
#spi_software_miso_pin: PE15
#spi_software_mosi_pin: PE13
#spi_software_sclk_pin: PE14
#run_current: 0.800
#stealthchop_threshold: 999999
#diag1_pin: PC3

#[tmc2130 stepper_z]
#cs_pin: PE1
#spi_software_miso_pin: PE15
#spi_software_mosi_pin: PE13
#spi_software_sclk_pin: PE14
#run_current: 0.650
#stealthchop_threshold: 999999
#diag1_pin: PC0

#[tmc2130 extruder]
#cs_pin: PC6
#spi_software_miso_pin: PE15
#spi_software_mosi_pin: PE13
#spi_software_sclk_pin: PE14
#run_current: 0.800
#stealthchop_threshold: 999999
#diag1_pin: PC2

#[tmc2130 extruder1]
#cs_pin: PD12
#spi_software_miso_pin: PE15
#spi_software_mosi_pin: PE13
#spi_software_sclk_pin: PE14
#run_current: 0.800
#stealthchop_threshold: 999999
#diag1_pin: PA0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
#*# calibrate =
#*# 	0.050000:3259411.512,0.090000:3258485.014,0.130000:3257508.749,
#*# 	0.170000:3256518.495,0.210000:3255566.813,0.250000:3254540.380,
#*# 	0.290000:3253515.027,0.330000:3252511.523,0.370000:3251554.742,
#*# 	0.410000:3250593.973,0.450000:3249647.074,0.490000:3248711.098,
#*# 	0.530000:3247829.797,0.570000:3246926.338,0.610000:3246073.233,
#*# 	0.650000:3245177.888,0.690000:3244333.500,0.730000:3243478.773,
#*# 	0.770000:3242670.574,0.810000:3241823.280,0.850000:3241013.122,
#*# 	0.890000:3240240.819,0.930000:3239443.812,0.970000:3238691.531,
#*# 	1.010000:3237898.346,1.050000:3237143.306,1.090000:3236417.107,
#*# 	1.130000:3235650.906,1.170000:3234916.114,1.210000:3234231.314,
#*# 	1.250000:3233526.718,1.290000:3232831.600,1.330000:3232201.520,
#*# 	1.370000:3231560.140,1.410000:3230918.943,1.450000:3230297.273,
#*# 	1.490000:3229692.040,1.530000:3229070.623,1.570000:3228478.825,
#*# 	1.610000:3227904.414,1.650000:3227321.545,1.690000:3226770.601,
#*# 	1.730000:3226224.596,1.770000:3225671.380,1.810000:3225151.019,
#*# 	1.850000:3224614.963,1.890000:3224091.979,1.930000:3223568.227,
#*# 	1.970000:3223072.948,2.010000:3222574.227,2.050000:3222096.793,
#*# 	2.090000:3221622.809,2.130000:3221136.389,2.170000:3220663.410,
#*# 	2.210000:3220209.975,2.250000:3219753.186,2.290000:3219315.133,
#*# 	2.330000:3218900.356,2.370000:3218459.919,2.410000:3218042.877,
#*# 	2.450000:3217665.933,2.490000:3217268.001,2.530000:3216920.757,
#*# 	2.570000:3216514.372,2.610000:3216163.539,2.650000:3215790.938,
#*# 	2.690000:3215456.230,2.730000:3215090.349,2.770000:3214769.369,
#*# 	2.810000:3214445.257,2.850000:3214123.795,2.890000:3213810.346,
#*# 	2.930000:3213488.384,2.970000:3213156.683,3.010000:3212891.303,
#*# 	3.050000:3212590.785,3.090000:3212317.718,3.130000:3212000.036,
#*# 	3.170000:3211729.047,3.210000:3211466.230,3.250000:3211204.825,
#*# 	3.290000:3210945.191,3.330000:3210684.708,3.370000:3210419.204,
#*# 	3.410000:3210195.383,3.450000:3209921.141,3.490000:3209689.579,
#*# 	3.530000:3209454.651,3.570000:3209211.641,3.610000:3208973.100,
#*# 	3.650000:3208743.829,3.690000:3208526.604,3.730000:3208313.899,
#*# 	3.770000:3208096.639,3.810000:3207882.019,3.850000:3207643.542,
#*# 	3.890000:3207441.166,3.930000:3207251.396,3.970000:3207034.233,
#*# 	4.010000:3206828.937,4.050000:3206642.332
#*#
#*# [temperature_probe btt_eddy]
#*# calibration_temp = 43.491716
#*# drift_calibration =
#*# 	3274238.528382, -1050.979270, 9.719414
#*# 	3250513.025280, -451.839830, 3.800633
#*# 	3238539.712094, -318.721378, 2.615138
#*# 	3229404.470212, -233.890181, 1.753721
#*# 	3220500.820526, -98.066528, 0.423859
#*# 	3213820.260864, -1.221144, -0.511388
#*# 	3209302.907959, 43.301258, -0.921270
#*# 	3205573.811628, 80.046592, -1.267420
#*# 	3201702.289020, 140.510842, -1.837133
#*# drift_calibration_min_temp = 33.55159907837751
#*#
#*# [input_shaper]
#*#
#*# [heater_bed]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.200123, -0.218205, -0.264081, 0.002715, 0.059187, 0.110825, 0.171465, -0.145347, -0.083750, 0.016415
#*# 	-0.009191, 0.022377, -0.018870, -0.014405, 0.027757, 0.064746, 0.094801, 0.144629, 0.222331, 0.339537
#*# 	-0.069198, -0.015787, -0.056986, -0.064640, -0.040944, -0.019833, 0.002723, 0.031505, 0.087114, 0.121150
#*# 	-0.059897, 0.004573, -0.026524, -0.032530, -0.003360, 0.007992, 0.018087, 0.038048, 0.065813, 0.064613
#*# 	-0.009535, 0.063323, 0.031035, 0.017896, 0.020812, 0.041331, 0.028361, 0.030470, 0.055275, 0.056767
#*# 	0.005806, 0.080730, 0.061391, 0.056341, 0.072947, 0.081408, 0.083686, 0.078545, 0.093029, 0.090803
#*# 	-0.019265, 0.062773, 0.048272, 0.046180, 0.066819, 0.078813, 0.074834, 0.075177, 0.106957, 0.112396
#*# 	-0.014927, 0.070055, 0.067442, 0.075385, 0.149475, 0.139059, 0.139216, 0.145906, 0.164663, 0.155403
#*# 	0.051200, 0.113302, 0.093772, 0.082998, 0.105941, 0.109202, 0.105325, 0.113387, 0.138082, 0.157033
#*# 	0.089861, 0.145589, 0.093227, 0.076946, 0.094429, 0.110245, 0.130239, 0.140683, 0.189768, 0.152736
#*# x_count = 10
#*# y_count = 10
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 404.96999999999997
#*# min_y = 30.0
#*# max_y = 390.0
#*#
#*# [bed_mesh current]
#*# version = 1
#*# points =
#*# 	0.003464, 0.006514, 0.009453
#*# 	0.025338, 0.027818, 0.021121
#*# 	0.028393, 0.031498, 0.026816
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 196.85
#*# max_x = 223.15
#*# min_y = 196.85
#*# max_y = 223.15
