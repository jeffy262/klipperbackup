# ================== INCLUDED CONFIG FILES ==================
[include mainsail.cfg]
[include led_effects.cfg]
[include screws_tilt_adjust.cfg]
[include moonraker_obico_macros.cfg]
[include wipe_nozzle_pause.cfg]
[include macros.cfg]
[include sample-bigtreetech-adxl345-v2.0.cfg]
[include knomi.cfg]
[include bigtreetech-eddy-zoffbeta.cfg]
[include sample-bigtreetech-ebb-sb-usb-v1.0.cfg]
[include ebbfan.cfg]
[include skr3fan.cfg]
[include WIPE_NOZZLE.cfg]
[exclude_object]

# ================== TEMPERATURE SENSORS ==================
[temperature_sensor CB2_CPU]
sensor_type: temperature_host
min_temp: 0
max_temp: 90

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PA3
pullup_resistor: 4700
min_temp: -20
max_temp: 120

# ================== MCU DEFINITIONS ==================
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_070026001351333031373138-if00

# ================== PRINTER ==================
[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2000
max_z_velocity: 40
max_z_accel: 160
square_corner_velocity: 7

# ================== STEPPERS ==================
[stepper_x]
step_pin: PD4
dir_pin: !PD3
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: -2
position_endstop: 0
position_max: 430
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: false

[tmc2209 stepper_x]
uart_pin: PD5
diag_pin: ^PC1
driver_SGTHRS: 90
run_current: 0.8
hold_current: 0.6
sense_resistor: 0.220
interpolate: True
stealthchop_threshold: 0

[stepper_y]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 40
full_steps_per_rotation: 200
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: -2
position_endstop: 0
position_max: 435
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: false

[tmc2209 stepper_y]
uart_pin: PD0
diag_pin: ^PC3
driver_SGTHRS: 80
run_current: 0.6
hold_current: 0.35
sense_resistor: 0.220
interpolate: True
stealthchop_threshold: 0

[stepper_z]
step_pin: PE2
dir_pin: PE3
enable_pin: !PE0
microsteps: 16
rotation_distance: 8
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 395
homing_speed: 5
second_homing_speed: 3
homing_retract_dist: 7

[tmc2209 stepper_z]
uart_pin: PE1
run_current: 0.85
hold_current: 0.5
sense_resistor: 0.220
interpolate: True
stealthchop_threshold: 0

# ================== FILAMENT SENSOR ==================
[filament_switch_sensor filament_sensor]
switch_pin: ^PC15
pause_on_runout: True
insert_gcode:
    M117 Insert Detected

# ================== HEATERS & FANS ==================
[heater_bed]
heater_pin: PD7
sensor_type: Generic 3950
sensor_pin: PA1
control: pid
pid_Kp: 62.465
pid_Ki: 1.482
pid_Kd: 658.225
min_temp: 10
max_temp: 115


[controller_fan motherboard_fan]
pin: PB7
stepper: stepper_x, stepper_y, stepper_z, extruder
heater: heater_bed
idle_timeout: 60

# ================== INPUT SHAPER ==================
[input_shaper]
shaper_type_x: mzv
shaper_freq_x: 38.4
shaper_type_y: ei
shaper_freq_y: 33.0

# ================== BED HEAT MACROS ==================
[gcode_macro BED_STEP_RAMP]
description: Ramp bed to TARGET in fixed steps (default 10C) and hold at each step (default 70s).
variable_step_c: 10
variable_hold_s: 70
variable_tol_c: 1.0
gcode:
  {% set target = params.TARGET|default(110)|float %}
  {% set step   = params.STEP|default(step_c)|int %}
  {% set hold   = params.HOLD_S|default(hold_s)|int %}
  {% set tol    = params.TOL|default(tol_c)|float %}
  {% set start = printer.heater_bed.temperature|float %}
  {% set first_stop = ((start / step)|int * step) + step %}
  {% if first_stop > target %}{% set first_stop = target %}{% endif %}
  RESPOND TYPE=echo MSG={"BED_STEP_RAMP: %.1f->%.0fC, step=%dC, hold=%ds" % (start, target, step, hold)}
  {% for sp in range(first_stop|int, (target|int), step) %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={sp}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={sp - tol} MAXIMUM={sp + tol}
    RESPOND TYPE=echo MSG={"Holding %.0fC for %ds..." % (sp, hold)}
    G4 P{hold * 1000}
  {% endfor %}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={target}
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target - tol} MAXIMUM={target + tol}
  RESPOND TYPE=echo MSG={"BED_STEP_RAMP: Reached %.0fC." % (target,)}

[gcode_macro BED_60]
gcode: BED_STEP_RAMP TARGET=60 STEP=10 HOLD_S=70

[gcode_macro BED_70]
gcode: BED_STEP_RAMP TARGET=70 STEP=10 HOLD_S=70

[gcode_macro BED_100]
gcode: BED_STEP_RAMP TARGET=100 STEP=10 HOLD_S=70

# ================== BOARD PINS ==================
[board_pins]
aliases:
    EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE9,  EXP1_7=PE11, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=PE8, EXP1_6=PE10, EXP1_8=PE12, EXP1_10=<5V>,
    EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4,   EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

# ================== AUTO-GENERATED (Klipper managed) ==================
